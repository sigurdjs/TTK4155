
Byggern.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000110  00800100  00000892  00000926  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000892  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800210  00800210  00000a36  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000a36  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000058  00000000  00000000  00000a92  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000004a2  00000000  00000000  00000aea  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000309  00000000  00000000  00000f8c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000001e9  00000000  00000000  00001295  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000104  00000000  00000000  00001480  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001b8  00000000  00000000  00001584  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000002c3  00000000  00000000  0000173c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000038  00000000  00000000  000019ff  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	12 e0       	ldi	r17, 0x02	; 2
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e2 e9       	ldi	r30, 0x92	; 146
  84:	f8 e0       	ldi	r31, 0x08	; 8
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a0 31       	cpi	r26, 0x10	; 16
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	22 e0       	ldi	r18, 0x02	; 2
  94:	a0 e1       	ldi	r26, 0x10	; 16
  96:	b2 e0       	ldi	r27, 0x02	; 2
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a6 31       	cpi	r26, 0x16	; 22
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <main>
  a6:	0c 94 47 04 	jmp	0x88e	; 0x88e <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <SRAM_test>:
#include "setup.h"
#include <avr/io.h>
#include <stdio.h>
#include "uart.h"

void SRAM_test(void) {
  ae:	cf 92       	push	r12
  b0:	df 92       	push	r13
  b2:	ef 92       	push	r14
  b4:	ff 92       	push	r15
  b6:	0f 93       	push	r16
  b8:	1f 93       	push	r17
  ba:	cf 93       	push	r28
  bc:	df 93       	push	r29
	uint16_t i, werrors, rerrors;
	werrors = 0;
	rerrors = 0;
	unsigned char testvalue;

	printf("Starting SRAM test...\r\n");
  be:	8e e0       	ldi	r24, 0x0E	; 14
  c0:	91 e0       	ldi	r25, 0x01	; 1
  c2:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <puts>
void SRAM_test(void) {
	//Start address for the SRAM
	volatile char *ext_ram = (char *) 0x1800;

	uint16_t i, werrors, rerrors;
	werrors = 0;
  c6:	00 e0       	ldi	r16, 0x00	; 0
  c8:	10 e0       	ldi	r17, 0x00	; 0
	rerrors = 0;
	unsigned char testvalue;

	printf("Starting SRAM test...\r\n");

	for (i = 0; i < 0x800; i++) {
  ca:	c0 e0       	ldi	r28, 0x00	; 0
  cc:	d0 e0       	ldi	r29, 0x00	; 0
		testvalue = ~(i % 256);
		ext_ram[i] = testvalue;
		if (ext_ram[i] != testvalue) {
			printf("SRAM error (write phase): ext_ram[%d] = %02X (should be %02X)\r\n", i, ext_ram[i], testvalue);
  ce:	0f 2e       	mov	r0, r31
  d0:	f5 e2       	ldi	r31, 0x25	; 37
  d2:	ef 2e       	mov	r14, r31
  d4:	f1 e0       	ldi	r31, 0x01	; 1
  d6:	ff 2e       	mov	r15, r31
  d8:	f0 2d       	mov	r31, r0
  da:	8c 2f       	mov	r24, r28
  dc:	80 95       	com	r24
  de:	fe 01       	movw	r30, r28
  e0:	f8 5e       	subi	r31, 0xE8	; 232

	printf("Starting SRAM test...\r\n");

	for (i = 0; i < 0x800; i++) {
		testvalue = ~(i % 256);
		ext_ram[i] = testvalue;
  e2:	80 83       	st	Z, r24
		if (ext_ram[i] != testvalue) {
  e4:	90 81       	ld	r25, Z
  e6:	98 17       	cp	r25, r24
  e8:	a9 f0       	breq	.+42     	; 0x114 <SRAM_test+0x66>
			printf("SRAM error (write phase): ext_ram[%d] = %02X (should be %02X)\r\n", i, ext_ram[i], testvalue);
  ea:	90 81       	ld	r25, Z
  ec:	1f 92       	push	r1
  ee:	8f 93       	push	r24
  f0:	1f 92       	push	r1
  f2:	9f 93       	push	r25
  f4:	df 93       	push	r29
  f6:	cf 93       	push	r28
  f8:	ff 92       	push	r15
  fa:	ef 92       	push	r14
  fc:	0e 94 57 01 	call	0x2ae	; 0x2ae <printf>
			werrors++;
 100:	0f 5f       	subi	r16, 0xFF	; 255
 102:	1f 4f       	sbci	r17, 0xFF	; 255
 104:	8d b7       	in	r24, 0x3d	; 61
 106:	9e b7       	in	r25, 0x3e	; 62
 108:	08 96       	adiw	r24, 0x08	; 8
 10a:	0f b6       	in	r0, 0x3f	; 63
 10c:	f8 94       	cli
 10e:	9e bf       	out	0x3e, r25	; 62
 110:	0f be       	out	0x3f, r0	; 63
 112:	8d bf       	out	0x3d, r24	; 61
	rerrors = 0;
	unsigned char testvalue;

	printf("Starting SRAM test...\r\n");

	for (i = 0; i < 0x800; i++) {
 114:	21 96       	adiw	r28, 0x01	; 1
 116:	c1 15       	cp	r28, r1
 118:	98 e0       	ldi	r25, 0x08	; 8
 11a:	d9 07       	cpc	r29, r25
 11c:	f1 f6       	brne	.-68     	; 0xda <SRAM_test+0x2c>
 11e:	e1 2c       	mov	r14, r1
 120:	f1 2c       	mov	r15, r1
 122:	c0 e0       	ldi	r28, 0x00	; 0
 124:	d0 e0       	ldi	r29, 0x00	; 0
	}

	for (i = 0; i < 0x800; i++) {
		testvalue = ~(i % 256);
		if (ext_ram[i] != testvalue) {
			printf("SRAM error (read phase): ext_ram[%d] = %02X (should be %02X)\r\n", i, ext_ram[i], testvalue);
 126:	0f 2e       	mov	r0, r31
 128:	f5 e6       	ldi	r31, 0x65	; 101
 12a:	cf 2e       	mov	r12, r31
 12c:	f1 e0       	ldi	r31, 0x01	; 1
 12e:	df 2e       	mov	r13, r31
 130:	f0 2d       	mov	r31, r0
 132:	8c 2f       	mov	r24, r28
 134:	80 95       	com	r24
 136:	fe 01       	movw	r30, r28
 138:	f8 5e       	subi	r31, 0xE8	; 232
		}
	}

	for (i = 0; i < 0x800; i++) {
		testvalue = ~(i % 256);
		if (ext_ram[i] != testvalue) {
 13a:	90 81       	ld	r25, Z
 13c:	89 17       	cp	r24, r25
 13e:	b1 f0       	breq	.+44     	; 0x16c <SRAM_test+0xbe>
			printf("SRAM error (read phase): ext_ram[%d] = %02X (should be %02X)\r\n", i, ext_ram[i], testvalue);
 140:	90 81       	ld	r25, Z
 142:	1f 92       	push	r1
 144:	8f 93       	push	r24
 146:	1f 92       	push	r1
 148:	9f 93       	push	r25
 14a:	df 93       	push	r29
 14c:	cf 93       	push	r28
 14e:	df 92       	push	r13
 150:	cf 92       	push	r12
 152:	0e 94 57 01 	call	0x2ae	; 0x2ae <printf>
			rerrors++;
 156:	8f ef       	ldi	r24, 0xFF	; 255
 158:	e8 1a       	sub	r14, r24
 15a:	f8 0a       	sbc	r15, r24
 15c:	8d b7       	in	r24, 0x3d	; 61
 15e:	9e b7       	in	r25, 0x3e	; 62
 160:	08 96       	adiw	r24, 0x08	; 8
 162:	0f b6       	in	r0, 0x3f	; 63
 164:	f8 94       	cli
 166:	9e bf       	out	0x3e, r25	; 62
 168:	0f be       	out	0x3f, r0	; 63
 16a:	8d bf       	out	0x3d, r24	; 61
			printf("SRAM error (write phase): ext_ram[%d] = %02X (should be %02X)\r\n", i, ext_ram[i], testvalue);
			werrors++;
		}
	}

	for (i = 0; i < 0x800; i++) {
 16c:	21 96       	adiw	r28, 0x01	; 1
 16e:	c1 15       	cp	r28, r1
 170:	98 e0       	ldi	r25, 0x08	; 8
 172:	d9 07       	cpc	r29, r25
 174:	f1 f6       	brne	.-68     	; 0x132 <SRAM_test+0x84>
			printf("SRAM error (read phase): ext_ram[%d] = %02X (should be %02X)\r\n", i, ext_ram[i], testvalue);
			rerrors++;
		}
	}

	printf("SRAM test completed with %d errors in write phase and %d errors in read phase\r\n", werrors, rerrors);
 176:	ff 92       	push	r15
 178:	ef 92       	push	r14
 17a:	1f 93       	push	r17
 17c:	0f 93       	push	r16
 17e:	84 ea       	ldi	r24, 0xA4	; 164
 180:	91 e0       	ldi	r25, 0x01	; 1
 182:	9f 93       	push	r25
 184:	8f 93       	push	r24
 186:	0e 94 57 01 	call	0x2ae	; 0x2ae <printf>
 18a:	0f 90       	pop	r0
 18c:	0f 90       	pop	r0
 18e:	0f 90       	pop	r0
 190:	0f 90       	pop	r0
 192:	0f 90       	pop	r0
 194:	0f 90       	pop	r0
}
 196:	df 91       	pop	r29
 198:	cf 91       	pop	r28
 19a:	1f 91       	pop	r17
 19c:	0f 91       	pop	r16
 19e:	ff 90       	pop	r15
 1a0:	ef 90       	pop	r14
 1a2:	df 90       	pop	r13
 1a4:	cf 90       	pop	r12
 1a6:	08 95       	ret

000001a8 <main>:

int main(void) {
		
	uart_init();
 1a8:	0e 94 07 01 	call	0x20e	; 0x20e <uart_init>

	MCUCR |= (1<<SRE);
 1ac:	85 b7       	in	r24, 0x35	; 53
 1ae:	80 68       	ori	r24, 0x80	; 128
 1b0:	85 bf       	out	0x35, r24	; 53
	SFIOR |= (1<<XMM2);
 1b2:	80 b7       	in	r24, 0x30	; 48
 1b4:	80 62       	ori	r24, 0x20	; 32
 1b6:	80 bf       	out	0x30, r24	; 48


	SRAM_test();
 1b8:	0e 94 57 00 	call	0xae	; 0xae <SRAM_test>
	char input;
    while(1)
    {
		
		puts("Hello world \n");
		input = getchar();
 1bc:	00 e1       	ldi	r16, 0x10	; 16
 1be:	12 e0       	ldi	r17, 0x02	; 2
		printf("You wrote %c\n", input);
 1c0:	c2 e0       	ldi	r28, 0x02	; 2
 1c2:	d2 e0       	ldi	r29, 0x02	; 2
	SRAM_test();
	char input;
    while(1)
    {
		
		puts("Hello world \n");
 1c4:	84 ef       	ldi	r24, 0xF4	; 244
 1c6:	91 e0       	ldi	r25, 0x01	; 1
 1c8:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <puts>
		input = getchar();
 1cc:	f8 01       	movw	r30, r16
 1ce:	80 81       	ld	r24, Z
 1d0:	91 81       	ldd	r25, Z+1	; 0x01
 1d2:	0e 94 19 01 	call	0x232	; 0x232 <fgetc>
		printf("You wrote %c\n", input);
 1d6:	99 27       	eor	r25, r25
 1d8:	9f 93       	push	r25
 1da:	8f 93       	push	r24
 1dc:	df 93       	push	r29
 1de:	cf 93       	push	r28
 1e0:	0e 94 57 01 	call	0x2ae	; 0x2ae <printf>
 1e4:	0f 90       	pop	r0
 1e6:	0f 90       	pop	r0
 1e8:	0f 90       	pop	r0
 1ea:	0f 90       	pop	r0
 1ec:	eb cf       	rjmp	.-42     	; 0x1c4 <main+0x1c>

000001ee <uart_send_char>:
	 // Link to stdio
	 stdout = &uart_io;
	 stdin = &uart_io;
 }

 void uart_send_char(char c, FILE *stream) {
 1ee:	cf 93       	push	r28
 1f0:	c8 2f       	mov	r28, r24
	 if (c == '\n') {
 1f2:	8a 30       	cpi	r24, 0x0A	; 10
 1f4:	19 f4       	brne	.+6      	; 0x1fc <uart_send_char+0xe>
		 uart_send_char('\r', stream);
 1f6:	8d e0       	ldi	r24, 0x0D	; 13
 1f8:	0e 94 f7 00 	call	0x1ee	; 0x1ee <uart_send_char>
	 }
	 loop_until_bit_is_set(UCSR0A,UDRE0);
 1fc:	5d 9b       	sbis	0x0b, 5	; 11
 1fe:	fe cf       	rjmp	.-4      	; 0x1fc <uart_send_char+0xe>
	 UDR0 = c;
 200:	cc b9       	out	0x0c, r28	; 12
 }
 202:	cf 91       	pop	r28
 204:	08 95       	ret

00000206 <uart_recieve_char>:

 char uart_recieve_char(FILE *stream) {
	 loop_until_bit_is_set(UCSR0A,RXC0);
 206:	5f 9b       	sbis	0x0b, 7	; 11
 208:	fe cf       	rjmp	.-4      	; 0x206 <uart_recieve_char>
	 return UDR0;
 20a:	8c b1       	in	r24, 0x0c	; 12
 }
 20c:	08 95       	ret

0000020e <uart_init>:
 #include "setup.h"
 
 void uart_init() {
	 //Set baud rate
	 unsigned int ubrr = (F_CPU-250)/16/BAUD-1;
	 UBRR0H = (unsigned char)(ubrr >> 8);
 20e:	10 bc       	out	0x20, r1	; 32
	 UBRR0L = (unsigned char)(ubrr);
 210:	8e e1       	ldi	r24, 0x1E	; 30
 212:	89 b9       	out	0x09, r24	; 9

	 // Set 8-bit data 2 stop bit
	 UCSR0C = (1<<URSEL0) | (1<<USBS0) | (3<<UCSZ00);
 214:	8e e8       	ldi	r24, 0x8E	; 142
 216:	80 bd       	out	0x20, r24	; 32
	 // Enable RX0 and TX0
	 UCSR0B = (1 << RXEN0 | (1 << TXEN0));
 218:	88 e1       	ldi	r24, 0x18	; 24
 21a:	8a b9       	out	0x0a, r24	; 10
	 
	 // Link to stdio
	 stdout = &uart_io;
 21c:	80 e0       	ldi	r24, 0x00	; 0
 21e:	91 e0       	ldi	r25, 0x01	; 1
 220:	90 93 13 02 	sts	0x0213, r25
 224:	80 93 12 02 	sts	0x0212, r24
	 stdin = &uart_io;
 228:	90 93 11 02 	sts	0x0211, r25
 22c:	80 93 10 02 	sts	0x0210, r24
 230:	08 95       	ret

00000232 <fgetc>:
 232:	cf 93       	push	r28
 234:	df 93       	push	r29
 236:	ec 01       	movw	r28, r24
 238:	2b 81       	ldd	r18, Y+3	; 0x03
 23a:	20 ff       	sbrs	r18, 0
 23c:	33 c0       	rjmp	.+102    	; 0x2a4 <fgetc+0x72>
 23e:	26 ff       	sbrs	r18, 6
 240:	0a c0       	rjmp	.+20     	; 0x256 <fgetc+0x24>
 242:	2f 7b       	andi	r18, 0xBF	; 191
 244:	2b 83       	std	Y+3, r18	; 0x03
 246:	8e 81       	ldd	r24, Y+6	; 0x06
 248:	9f 81       	ldd	r25, Y+7	; 0x07
 24a:	01 96       	adiw	r24, 0x01	; 1
 24c:	9f 83       	std	Y+7, r25	; 0x07
 24e:	8e 83       	std	Y+6, r24	; 0x06
 250:	8a 81       	ldd	r24, Y+2	; 0x02
 252:	90 e0       	ldi	r25, 0x00	; 0
 254:	29 c0       	rjmp	.+82     	; 0x2a8 <fgetc+0x76>
 256:	22 ff       	sbrs	r18, 2
 258:	0f c0       	rjmp	.+30     	; 0x278 <fgetc+0x46>
 25a:	e8 81       	ld	r30, Y
 25c:	f9 81       	ldd	r31, Y+1	; 0x01
 25e:	80 81       	ld	r24, Z
 260:	99 27       	eor	r25, r25
 262:	87 fd       	sbrc	r24, 7
 264:	90 95       	com	r25
 266:	00 97       	sbiw	r24, 0x00	; 0
 268:	19 f4       	brne	.+6      	; 0x270 <fgetc+0x3e>
 26a:	20 62       	ori	r18, 0x20	; 32
 26c:	2b 83       	std	Y+3, r18	; 0x03
 26e:	1a c0       	rjmp	.+52     	; 0x2a4 <fgetc+0x72>
 270:	31 96       	adiw	r30, 0x01	; 1
 272:	f9 83       	std	Y+1, r31	; 0x01
 274:	e8 83       	st	Y, r30
 276:	0e c0       	rjmp	.+28     	; 0x294 <fgetc+0x62>
 278:	ea 85       	ldd	r30, Y+10	; 0x0a
 27a:	fb 85       	ldd	r31, Y+11	; 0x0b
 27c:	09 95       	icall
 27e:	97 ff       	sbrs	r25, 7
 280:	09 c0       	rjmp	.+18     	; 0x294 <fgetc+0x62>
 282:	2b 81       	ldd	r18, Y+3	; 0x03
 284:	01 96       	adiw	r24, 0x01	; 1
 286:	11 f4       	brne	.+4      	; 0x28c <fgetc+0x5a>
 288:	80 e1       	ldi	r24, 0x10	; 16
 28a:	01 c0       	rjmp	.+2      	; 0x28e <fgetc+0x5c>
 28c:	80 e2       	ldi	r24, 0x20	; 32
 28e:	82 2b       	or	r24, r18
 290:	8b 83       	std	Y+3, r24	; 0x03
 292:	08 c0       	rjmp	.+16     	; 0x2a4 <fgetc+0x72>
 294:	2e 81       	ldd	r18, Y+6	; 0x06
 296:	3f 81       	ldd	r19, Y+7	; 0x07
 298:	2f 5f       	subi	r18, 0xFF	; 255
 29a:	3f 4f       	sbci	r19, 0xFF	; 255
 29c:	3f 83       	std	Y+7, r19	; 0x07
 29e:	2e 83       	std	Y+6, r18	; 0x06
 2a0:	99 27       	eor	r25, r25
 2a2:	02 c0       	rjmp	.+4      	; 0x2a8 <fgetc+0x76>
 2a4:	8f ef       	ldi	r24, 0xFF	; 255
 2a6:	9f ef       	ldi	r25, 0xFF	; 255
 2a8:	df 91       	pop	r29
 2aa:	cf 91       	pop	r28
 2ac:	08 95       	ret

000002ae <printf>:
 2ae:	a0 e0       	ldi	r26, 0x00	; 0
 2b0:	b0 e0       	ldi	r27, 0x00	; 0
 2b2:	ed e5       	ldi	r30, 0x5D	; 93
 2b4:	f1 e0       	ldi	r31, 0x01	; 1
 2b6:	0c 94 20 04 	jmp	0x840	; 0x840 <__prologue_saves__+0x20>
 2ba:	fe 01       	movw	r30, r28
 2bc:	35 96       	adiw	r30, 0x05	; 5
 2be:	61 91       	ld	r22, Z+
 2c0:	71 91       	ld	r23, Z+
 2c2:	af 01       	movw	r20, r30
 2c4:	80 91 12 02 	lds	r24, 0x0212
 2c8:	90 91 13 02 	lds	r25, 0x0213
 2cc:	0e 94 98 01 	call	0x330	; 0x330 <vfprintf>
 2d0:	e2 e0       	ldi	r30, 0x02	; 2
 2d2:	0c 94 3c 04 	jmp	0x878	; 0x878 <__epilogue_restores__+0x20>

000002d6 <puts>:
 2d6:	0f 93       	push	r16
 2d8:	1f 93       	push	r17
 2da:	cf 93       	push	r28
 2dc:	df 93       	push	r29
 2de:	e0 91 12 02 	lds	r30, 0x0212
 2e2:	f0 91 13 02 	lds	r31, 0x0213
 2e6:	23 81       	ldd	r18, Z+3	; 0x03
 2e8:	21 ff       	sbrs	r18, 1
 2ea:	1b c0       	rjmp	.+54     	; 0x322 <puts+0x4c>
 2ec:	ec 01       	movw	r28, r24
 2ee:	00 e0       	ldi	r16, 0x00	; 0
 2f0:	10 e0       	ldi	r17, 0x00	; 0
 2f2:	89 91       	ld	r24, Y+
 2f4:	60 91 12 02 	lds	r22, 0x0212
 2f8:	70 91 13 02 	lds	r23, 0x0213
 2fc:	db 01       	movw	r26, r22
 2fe:	18 96       	adiw	r26, 0x08	; 8
 300:	ed 91       	ld	r30, X+
 302:	fc 91       	ld	r31, X
 304:	19 97       	sbiw	r26, 0x09	; 9
 306:	88 23       	and	r24, r24
 308:	31 f0       	breq	.+12     	; 0x316 <puts+0x40>
 30a:	09 95       	icall
 30c:	89 2b       	or	r24, r25
 30e:	89 f3       	breq	.-30     	; 0x2f2 <puts+0x1c>
 310:	0f ef       	ldi	r16, 0xFF	; 255
 312:	1f ef       	ldi	r17, 0xFF	; 255
 314:	ee cf       	rjmp	.-36     	; 0x2f2 <puts+0x1c>
 316:	8a e0       	ldi	r24, 0x0A	; 10
 318:	09 95       	icall
 31a:	89 2b       	or	r24, r25
 31c:	11 f4       	brne	.+4      	; 0x322 <puts+0x4c>
 31e:	c8 01       	movw	r24, r16
 320:	02 c0       	rjmp	.+4      	; 0x326 <puts+0x50>
 322:	8f ef       	ldi	r24, 0xFF	; 255
 324:	9f ef       	ldi	r25, 0xFF	; 255
 326:	df 91       	pop	r29
 328:	cf 91       	pop	r28
 32a:	1f 91       	pop	r17
 32c:	0f 91       	pop	r16
 32e:	08 95       	ret

00000330 <vfprintf>:
 330:	ac e0       	ldi	r26, 0x0C	; 12
 332:	b0 e0       	ldi	r27, 0x00	; 0
 334:	ee e9       	ldi	r30, 0x9E	; 158
 336:	f1 e0       	ldi	r31, 0x01	; 1
 338:	0c 94 10 04 	jmp	0x820	; 0x820 <__prologue_saves__>
 33c:	7c 01       	movw	r14, r24
 33e:	6b 01       	movw	r12, r22
 340:	8a 01       	movw	r16, r20
 342:	fc 01       	movw	r30, r24
 344:	17 82       	std	Z+7, r1	; 0x07
 346:	16 82       	std	Z+6, r1	; 0x06
 348:	83 81       	ldd	r24, Z+3	; 0x03
 34a:	81 ff       	sbrs	r24, 1
 34c:	bd c1       	rjmp	.+890    	; 0x6c8 <__stack+0x1c9>
 34e:	ce 01       	movw	r24, r28
 350:	01 96       	adiw	r24, 0x01	; 1
 352:	4c 01       	movw	r8, r24
 354:	f7 01       	movw	r30, r14
 356:	93 81       	ldd	r25, Z+3	; 0x03
 358:	f6 01       	movw	r30, r12
 35a:	93 fd       	sbrc	r25, 3
 35c:	85 91       	lpm	r24, Z+
 35e:	93 ff       	sbrs	r25, 3
 360:	81 91       	ld	r24, Z+
 362:	6f 01       	movw	r12, r30
 364:	88 23       	and	r24, r24
 366:	09 f4       	brne	.+2      	; 0x36a <vfprintf+0x3a>
 368:	ab c1       	rjmp	.+854    	; 0x6c0 <__stack+0x1c1>
 36a:	85 32       	cpi	r24, 0x25	; 37
 36c:	39 f4       	brne	.+14     	; 0x37c <vfprintf+0x4c>
 36e:	93 fd       	sbrc	r25, 3
 370:	85 91       	lpm	r24, Z+
 372:	93 ff       	sbrs	r25, 3
 374:	81 91       	ld	r24, Z+
 376:	6f 01       	movw	r12, r30
 378:	85 32       	cpi	r24, 0x25	; 37
 37a:	29 f4       	brne	.+10     	; 0x386 <vfprintf+0x56>
 37c:	b7 01       	movw	r22, r14
 37e:	90 e0       	ldi	r25, 0x00	; 0
 380:	0e 94 80 03 	call	0x700	; 0x700 <fputc>
 384:	e7 cf       	rjmp	.-50     	; 0x354 <vfprintf+0x24>
 386:	51 2c       	mov	r5, r1
 388:	31 2c       	mov	r3, r1
 38a:	20 e0       	ldi	r18, 0x00	; 0
 38c:	20 32       	cpi	r18, 0x20	; 32
 38e:	a0 f4       	brcc	.+40     	; 0x3b8 <vfprintf+0x88>
 390:	8b 32       	cpi	r24, 0x2B	; 43
 392:	69 f0       	breq	.+26     	; 0x3ae <vfprintf+0x7e>
 394:	30 f4       	brcc	.+12     	; 0x3a2 <vfprintf+0x72>
 396:	80 32       	cpi	r24, 0x20	; 32
 398:	59 f0       	breq	.+22     	; 0x3b0 <vfprintf+0x80>
 39a:	83 32       	cpi	r24, 0x23	; 35
 39c:	69 f4       	brne	.+26     	; 0x3b8 <vfprintf+0x88>
 39e:	20 61       	ori	r18, 0x10	; 16
 3a0:	2c c0       	rjmp	.+88     	; 0x3fa <vfprintf+0xca>
 3a2:	8d 32       	cpi	r24, 0x2D	; 45
 3a4:	39 f0       	breq	.+14     	; 0x3b4 <vfprintf+0x84>
 3a6:	80 33       	cpi	r24, 0x30	; 48
 3a8:	39 f4       	brne	.+14     	; 0x3b8 <vfprintf+0x88>
 3aa:	21 60       	ori	r18, 0x01	; 1
 3ac:	26 c0       	rjmp	.+76     	; 0x3fa <vfprintf+0xca>
 3ae:	22 60       	ori	r18, 0x02	; 2
 3b0:	24 60       	ori	r18, 0x04	; 4
 3b2:	23 c0       	rjmp	.+70     	; 0x3fa <vfprintf+0xca>
 3b4:	28 60       	ori	r18, 0x08	; 8
 3b6:	21 c0       	rjmp	.+66     	; 0x3fa <vfprintf+0xca>
 3b8:	27 fd       	sbrc	r18, 7
 3ba:	27 c0       	rjmp	.+78     	; 0x40a <vfprintf+0xda>
 3bc:	30 ed       	ldi	r19, 0xD0	; 208
 3be:	38 0f       	add	r19, r24
 3c0:	3a 30       	cpi	r19, 0x0A	; 10
 3c2:	78 f4       	brcc	.+30     	; 0x3e2 <vfprintf+0xb2>
 3c4:	26 ff       	sbrs	r18, 6
 3c6:	06 c0       	rjmp	.+12     	; 0x3d4 <vfprintf+0xa4>
 3c8:	fa e0       	ldi	r31, 0x0A	; 10
 3ca:	5f 9e       	mul	r5, r31
 3cc:	30 0d       	add	r19, r0
 3ce:	11 24       	eor	r1, r1
 3d0:	53 2e       	mov	r5, r19
 3d2:	13 c0       	rjmp	.+38     	; 0x3fa <vfprintf+0xca>
 3d4:	8a e0       	ldi	r24, 0x0A	; 10
 3d6:	38 9e       	mul	r3, r24
 3d8:	30 0d       	add	r19, r0
 3da:	11 24       	eor	r1, r1
 3dc:	33 2e       	mov	r3, r19
 3de:	20 62       	ori	r18, 0x20	; 32
 3e0:	0c c0       	rjmp	.+24     	; 0x3fa <vfprintf+0xca>
 3e2:	8e 32       	cpi	r24, 0x2E	; 46
 3e4:	21 f4       	brne	.+8      	; 0x3ee <vfprintf+0xbe>
 3e6:	26 fd       	sbrc	r18, 6
 3e8:	6b c1       	rjmp	.+726    	; 0x6c0 <__stack+0x1c1>
 3ea:	20 64       	ori	r18, 0x40	; 64
 3ec:	06 c0       	rjmp	.+12     	; 0x3fa <vfprintf+0xca>
 3ee:	8c 36       	cpi	r24, 0x6C	; 108
 3f0:	11 f4       	brne	.+4      	; 0x3f6 <vfprintf+0xc6>
 3f2:	20 68       	ori	r18, 0x80	; 128
 3f4:	02 c0       	rjmp	.+4      	; 0x3fa <vfprintf+0xca>
 3f6:	88 36       	cpi	r24, 0x68	; 104
 3f8:	41 f4       	brne	.+16     	; 0x40a <vfprintf+0xda>
 3fa:	f6 01       	movw	r30, r12
 3fc:	93 fd       	sbrc	r25, 3
 3fe:	85 91       	lpm	r24, Z+
 400:	93 ff       	sbrs	r25, 3
 402:	81 91       	ld	r24, Z+
 404:	6f 01       	movw	r12, r30
 406:	81 11       	cpse	r24, r1
 408:	c1 cf       	rjmp	.-126    	; 0x38c <vfprintf+0x5c>
 40a:	98 2f       	mov	r25, r24
 40c:	9f 7d       	andi	r25, 0xDF	; 223
 40e:	95 54       	subi	r25, 0x45	; 69
 410:	93 30       	cpi	r25, 0x03	; 3
 412:	28 f4       	brcc	.+10     	; 0x41e <vfprintf+0xee>
 414:	0c 5f       	subi	r16, 0xFC	; 252
 416:	1f 4f       	sbci	r17, 0xFF	; 255
 418:	ff e3       	ldi	r31, 0x3F	; 63
 41a:	f9 83       	std	Y+1, r31	; 0x01
 41c:	0d c0       	rjmp	.+26     	; 0x438 <vfprintf+0x108>
 41e:	83 36       	cpi	r24, 0x63	; 99
 420:	31 f0       	breq	.+12     	; 0x42e <vfprintf+0xfe>
 422:	83 37       	cpi	r24, 0x73	; 115
 424:	71 f0       	breq	.+28     	; 0x442 <vfprintf+0x112>
 426:	83 35       	cpi	r24, 0x53	; 83
 428:	09 f0       	breq	.+2      	; 0x42c <vfprintf+0xfc>
 42a:	5b c0       	rjmp	.+182    	; 0x4e2 <vfprintf+0x1b2>
 42c:	22 c0       	rjmp	.+68     	; 0x472 <vfprintf+0x142>
 42e:	f8 01       	movw	r30, r16
 430:	80 81       	ld	r24, Z
 432:	89 83       	std	Y+1, r24	; 0x01
 434:	0e 5f       	subi	r16, 0xFE	; 254
 436:	1f 4f       	sbci	r17, 0xFF	; 255
 438:	44 24       	eor	r4, r4
 43a:	43 94       	inc	r4
 43c:	51 2c       	mov	r5, r1
 43e:	54 01       	movw	r10, r8
 440:	15 c0       	rjmp	.+42     	; 0x46c <vfprintf+0x13c>
 442:	38 01       	movw	r6, r16
 444:	f2 e0       	ldi	r31, 0x02	; 2
 446:	6f 0e       	add	r6, r31
 448:	71 1c       	adc	r7, r1
 44a:	f8 01       	movw	r30, r16
 44c:	a0 80       	ld	r10, Z
 44e:	b1 80       	ldd	r11, Z+1	; 0x01
 450:	26 ff       	sbrs	r18, 6
 452:	03 c0       	rjmp	.+6      	; 0x45a <vfprintf+0x12a>
 454:	65 2d       	mov	r22, r5
 456:	70 e0       	ldi	r23, 0x00	; 0
 458:	02 c0       	rjmp	.+4      	; 0x45e <vfprintf+0x12e>
 45a:	6f ef       	ldi	r22, 0xFF	; 255
 45c:	7f ef       	ldi	r23, 0xFF	; 255
 45e:	c5 01       	movw	r24, r10
 460:	2c 87       	std	Y+12, r18	; 0x0c
 462:	0e 94 75 03 	call	0x6ea	; 0x6ea <strnlen>
 466:	2c 01       	movw	r4, r24
 468:	83 01       	movw	r16, r6
 46a:	2c 85       	ldd	r18, Y+12	; 0x0c
 46c:	2f 77       	andi	r18, 0x7F	; 127
 46e:	22 2e       	mov	r2, r18
 470:	17 c0       	rjmp	.+46     	; 0x4a0 <vfprintf+0x170>
 472:	38 01       	movw	r6, r16
 474:	f2 e0       	ldi	r31, 0x02	; 2
 476:	6f 0e       	add	r6, r31
 478:	71 1c       	adc	r7, r1
 47a:	f8 01       	movw	r30, r16
 47c:	a0 80       	ld	r10, Z
 47e:	b1 80       	ldd	r11, Z+1	; 0x01
 480:	26 ff       	sbrs	r18, 6
 482:	03 c0       	rjmp	.+6      	; 0x48a <vfprintf+0x15a>
 484:	65 2d       	mov	r22, r5
 486:	70 e0       	ldi	r23, 0x00	; 0
 488:	02 c0       	rjmp	.+4      	; 0x48e <vfprintf+0x15e>
 48a:	6f ef       	ldi	r22, 0xFF	; 255
 48c:	7f ef       	ldi	r23, 0xFF	; 255
 48e:	c5 01       	movw	r24, r10
 490:	2c 87       	std	Y+12, r18	; 0x0c
 492:	0e 94 6a 03 	call	0x6d4	; 0x6d4 <strnlen_P>
 496:	2c 01       	movw	r4, r24
 498:	2c 85       	ldd	r18, Y+12	; 0x0c
 49a:	20 68       	ori	r18, 0x80	; 128
 49c:	22 2e       	mov	r2, r18
 49e:	83 01       	movw	r16, r6
 4a0:	23 fc       	sbrc	r2, 3
 4a2:	1b c0       	rjmp	.+54     	; 0x4da <vfprintf+0x1aa>
 4a4:	83 2d       	mov	r24, r3
 4a6:	90 e0       	ldi	r25, 0x00	; 0
 4a8:	48 16       	cp	r4, r24
 4aa:	59 06       	cpc	r5, r25
 4ac:	b0 f4       	brcc	.+44     	; 0x4da <vfprintf+0x1aa>
 4ae:	b7 01       	movw	r22, r14
 4b0:	80 e2       	ldi	r24, 0x20	; 32
 4b2:	90 e0       	ldi	r25, 0x00	; 0
 4b4:	0e 94 80 03 	call	0x700	; 0x700 <fputc>
 4b8:	3a 94       	dec	r3
 4ba:	f4 cf       	rjmp	.-24     	; 0x4a4 <vfprintf+0x174>
 4bc:	f5 01       	movw	r30, r10
 4be:	27 fc       	sbrc	r2, 7
 4c0:	85 91       	lpm	r24, Z+
 4c2:	27 fe       	sbrs	r2, 7
 4c4:	81 91       	ld	r24, Z+
 4c6:	5f 01       	movw	r10, r30
 4c8:	b7 01       	movw	r22, r14
 4ca:	90 e0       	ldi	r25, 0x00	; 0
 4cc:	0e 94 80 03 	call	0x700	; 0x700 <fputc>
 4d0:	31 10       	cpse	r3, r1
 4d2:	3a 94       	dec	r3
 4d4:	f1 e0       	ldi	r31, 0x01	; 1
 4d6:	4f 1a       	sub	r4, r31
 4d8:	51 08       	sbc	r5, r1
 4da:	41 14       	cp	r4, r1
 4dc:	51 04       	cpc	r5, r1
 4de:	71 f7       	brne	.-36     	; 0x4bc <vfprintf+0x18c>
 4e0:	e5 c0       	rjmp	.+458    	; 0x6ac <__stack+0x1ad>
 4e2:	84 36       	cpi	r24, 0x64	; 100
 4e4:	11 f0       	breq	.+4      	; 0x4ea <vfprintf+0x1ba>
 4e6:	89 36       	cpi	r24, 0x69	; 105
 4e8:	39 f5       	brne	.+78     	; 0x538 <__stack+0x39>
 4ea:	f8 01       	movw	r30, r16
 4ec:	27 ff       	sbrs	r18, 7
 4ee:	07 c0       	rjmp	.+14     	; 0x4fe <vfprintf+0x1ce>
 4f0:	60 81       	ld	r22, Z
 4f2:	71 81       	ldd	r23, Z+1	; 0x01
 4f4:	82 81       	ldd	r24, Z+2	; 0x02
 4f6:	93 81       	ldd	r25, Z+3	; 0x03
 4f8:	0c 5f       	subi	r16, 0xFC	; 252
 4fa:	1f 4f       	sbci	r17, 0xFF	; 255
 4fc:	08 c0       	rjmp	.+16     	; 0x50e <__stack+0xf>
 4fe:	60 81       	ld	r22, Z
 500:	71 81       	ldd	r23, Z+1	; 0x01
 502:	88 27       	eor	r24, r24
 504:	77 fd       	sbrc	r23, 7
 506:	80 95       	com	r24
 508:	98 2f       	mov	r25, r24
 50a:	0e 5f       	subi	r16, 0xFE	; 254
 50c:	1f 4f       	sbci	r17, 0xFF	; 255
 50e:	2f 76       	andi	r18, 0x6F	; 111
 510:	b2 2e       	mov	r11, r18
 512:	97 ff       	sbrs	r25, 7
 514:	09 c0       	rjmp	.+18     	; 0x528 <__stack+0x29>
 516:	90 95       	com	r25
 518:	80 95       	com	r24
 51a:	70 95       	com	r23
 51c:	61 95       	neg	r22
 51e:	7f 4f       	sbci	r23, 0xFF	; 255
 520:	8f 4f       	sbci	r24, 0xFF	; 255
 522:	9f 4f       	sbci	r25, 0xFF	; 255
 524:	20 68       	ori	r18, 0x80	; 128
 526:	b2 2e       	mov	r11, r18
 528:	2a e0       	ldi	r18, 0x0A	; 10
 52a:	30 e0       	ldi	r19, 0x00	; 0
 52c:	a4 01       	movw	r20, r8
 52e:	0e 94 b2 03 	call	0x764	; 0x764 <__ultoa_invert>
 532:	a8 2e       	mov	r10, r24
 534:	a8 18       	sub	r10, r8
 536:	44 c0       	rjmp	.+136    	; 0x5c0 <__stack+0xc1>
 538:	85 37       	cpi	r24, 0x75	; 117
 53a:	29 f4       	brne	.+10     	; 0x546 <__stack+0x47>
 53c:	2f 7e       	andi	r18, 0xEF	; 239
 53e:	b2 2e       	mov	r11, r18
 540:	2a e0       	ldi	r18, 0x0A	; 10
 542:	30 e0       	ldi	r19, 0x00	; 0
 544:	25 c0       	rjmp	.+74     	; 0x590 <__stack+0x91>
 546:	f2 2f       	mov	r31, r18
 548:	f9 7f       	andi	r31, 0xF9	; 249
 54a:	bf 2e       	mov	r11, r31
 54c:	8f 36       	cpi	r24, 0x6F	; 111
 54e:	c1 f0       	breq	.+48     	; 0x580 <__stack+0x81>
 550:	18 f4       	brcc	.+6      	; 0x558 <__stack+0x59>
 552:	88 35       	cpi	r24, 0x58	; 88
 554:	79 f0       	breq	.+30     	; 0x574 <__stack+0x75>
 556:	b4 c0       	rjmp	.+360    	; 0x6c0 <__stack+0x1c1>
 558:	80 37       	cpi	r24, 0x70	; 112
 55a:	19 f0       	breq	.+6      	; 0x562 <__stack+0x63>
 55c:	88 37       	cpi	r24, 0x78	; 120
 55e:	21 f0       	breq	.+8      	; 0x568 <__stack+0x69>
 560:	af c0       	rjmp	.+350    	; 0x6c0 <__stack+0x1c1>
 562:	2f 2f       	mov	r18, r31
 564:	20 61       	ori	r18, 0x10	; 16
 566:	b2 2e       	mov	r11, r18
 568:	b4 fe       	sbrs	r11, 4
 56a:	0d c0       	rjmp	.+26     	; 0x586 <__stack+0x87>
 56c:	8b 2d       	mov	r24, r11
 56e:	84 60       	ori	r24, 0x04	; 4
 570:	b8 2e       	mov	r11, r24
 572:	09 c0       	rjmp	.+18     	; 0x586 <__stack+0x87>
 574:	24 ff       	sbrs	r18, 4
 576:	0a c0       	rjmp	.+20     	; 0x58c <__stack+0x8d>
 578:	9f 2f       	mov	r25, r31
 57a:	96 60       	ori	r25, 0x06	; 6
 57c:	b9 2e       	mov	r11, r25
 57e:	06 c0       	rjmp	.+12     	; 0x58c <__stack+0x8d>
 580:	28 e0       	ldi	r18, 0x08	; 8
 582:	30 e0       	ldi	r19, 0x00	; 0
 584:	05 c0       	rjmp	.+10     	; 0x590 <__stack+0x91>
 586:	20 e1       	ldi	r18, 0x10	; 16
 588:	30 e0       	ldi	r19, 0x00	; 0
 58a:	02 c0       	rjmp	.+4      	; 0x590 <__stack+0x91>
 58c:	20 e1       	ldi	r18, 0x10	; 16
 58e:	32 e0       	ldi	r19, 0x02	; 2
 590:	f8 01       	movw	r30, r16
 592:	b7 fe       	sbrs	r11, 7
 594:	07 c0       	rjmp	.+14     	; 0x5a4 <__stack+0xa5>
 596:	60 81       	ld	r22, Z
 598:	71 81       	ldd	r23, Z+1	; 0x01
 59a:	82 81       	ldd	r24, Z+2	; 0x02
 59c:	93 81       	ldd	r25, Z+3	; 0x03
 59e:	0c 5f       	subi	r16, 0xFC	; 252
 5a0:	1f 4f       	sbci	r17, 0xFF	; 255
 5a2:	06 c0       	rjmp	.+12     	; 0x5b0 <__stack+0xb1>
 5a4:	60 81       	ld	r22, Z
 5a6:	71 81       	ldd	r23, Z+1	; 0x01
 5a8:	80 e0       	ldi	r24, 0x00	; 0
 5aa:	90 e0       	ldi	r25, 0x00	; 0
 5ac:	0e 5f       	subi	r16, 0xFE	; 254
 5ae:	1f 4f       	sbci	r17, 0xFF	; 255
 5b0:	a4 01       	movw	r20, r8
 5b2:	0e 94 b2 03 	call	0x764	; 0x764 <__ultoa_invert>
 5b6:	a8 2e       	mov	r10, r24
 5b8:	a8 18       	sub	r10, r8
 5ba:	fb 2d       	mov	r31, r11
 5bc:	ff 77       	andi	r31, 0x7F	; 127
 5be:	bf 2e       	mov	r11, r31
 5c0:	b6 fe       	sbrs	r11, 6
 5c2:	0b c0       	rjmp	.+22     	; 0x5da <__stack+0xdb>
 5c4:	2b 2d       	mov	r18, r11
 5c6:	2e 7f       	andi	r18, 0xFE	; 254
 5c8:	a5 14       	cp	r10, r5
 5ca:	50 f4       	brcc	.+20     	; 0x5e0 <__stack+0xe1>
 5cc:	b4 fe       	sbrs	r11, 4
 5ce:	0a c0       	rjmp	.+20     	; 0x5e4 <__stack+0xe5>
 5d0:	b2 fc       	sbrc	r11, 2
 5d2:	08 c0       	rjmp	.+16     	; 0x5e4 <__stack+0xe5>
 5d4:	2b 2d       	mov	r18, r11
 5d6:	2e 7e       	andi	r18, 0xEE	; 238
 5d8:	05 c0       	rjmp	.+10     	; 0x5e4 <__stack+0xe5>
 5da:	7a 2c       	mov	r7, r10
 5dc:	2b 2d       	mov	r18, r11
 5de:	03 c0       	rjmp	.+6      	; 0x5e6 <__stack+0xe7>
 5e0:	7a 2c       	mov	r7, r10
 5e2:	01 c0       	rjmp	.+2      	; 0x5e6 <__stack+0xe7>
 5e4:	75 2c       	mov	r7, r5
 5e6:	24 ff       	sbrs	r18, 4
 5e8:	0d c0       	rjmp	.+26     	; 0x604 <__stack+0x105>
 5ea:	fe 01       	movw	r30, r28
 5ec:	ea 0d       	add	r30, r10
 5ee:	f1 1d       	adc	r31, r1
 5f0:	80 81       	ld	r24, Z
 5f2:	80 33       	cpi	r24, 0x30	; 48
 5f4:	11 f4       	brne	.+4      	; 0x5fa <__stack+0xfb>
 5f6:	29 7e       	andi	r18, 0xE9	; 233
 5f8:	09 c0       	rjmp	.+18     	; 0x60c <__stack+0x10d>
 5fa:	22 ff       	sbrs	r18, 2
 5fc:	06 c0       	rjmp	.+12     	; 0x60a <__stack+0x10b>
 5fe:	73 94       	inc	r7
 600:	73 94       	inc	r7
 602:	04 c0       	rjmp	.+8      	; 0x60c <__stack+0x10d>
 604:	82 2f       	mov	r24, r18
 606:	86 78       	andi	r24, 0x86	; 134
 608:	09 f0       	breq	.+2      	; 0x60c <__stack+0x10d>
 60a:	73 94       	inc	r7
 60c:	23 fd       	sbrc	r18, 3
 60e:	13 c0       	rjmp	.+38     	; 0x636 <__stack+0x137>
 610:	20 ff       	sbrs	r18, 0
 612:	06 c0       	rjmp	.+12     	; 0x620 <__stack+0x121>
 614:	5a 2c       	mov	r5, r10
 616:	73 14       	cp	r7, r3
 618:	18 f4       	brcc	.+6      	; 0x620 <__stack+0x121>
 61a:	53 0c       	add	r5, r3
 61c:	57 18       	sub	r5, r7
 61e:	73 2c       	mov	r7, r3
 620:	73 14       	cp	r7, r3
 622:	68 f4       	brcc	.+26     	; 0x63e <__stack+0x13f>
 624:	b7 01       	movw	r22, r14
 626:	80 e2       	ldi	r24, 0x20	; 32
 628:	90 e0       	ldi	r25, 0x00	; 0
 62a:	2c 87       	std	Y+12, r18	; 0x0c
 62c:	0e 94 80 03 	call	0x700	; 0x700 <fputc>
 630:	73 94       	inc	r7
 632:	2c 85       	ldd	r18, Y+12	; 0x0c
 634:	f5 cf       	rjmp	.-22     	; 0x620 <__stack+0x121>
 636:	73 14       	cp	r7, r3
 638:	10 f4       	brcc	.+4      	; 0x63e <__stack+0x13f>
 63a:	37 18       	sub	r3, r7
 63c:	01 c0       	rjmp	.+2      	; 0x640 <__stack+0x141>
 63e:	31 2c       	mov	r3, r1
 640:	24 ff       	sbrs	r18, 4
 642:	12 c0       	rjmp	.+36     	; 0x668 <__stack+0x169>
 644:	b7 01       	movw	r22, r14
 646:	80 e3       	ldi	r24, 0x30	; 48
 648:	90 e0       	ldi	r25, 0x00	; 0
 64a:	2c 87       	std	Y+12, r18	; 0x0c
 64c:	0e 94 80 03 	call	0x700	; 0x700 <fputc>
 650:	2c 85       	ldd	r18, Y+12	; 0x0c
 652:	22 ff       	sbrs	r18, 2
 654:	17 c0       	rjmp	.+46     	; 0x684 <__stack+0x185>
 656:	21 ff       	sbrs	r18, 1
 658:	03 c0       	rjmp	.+6      	; 0x660 <__stack+0x161>
 65a:	88 e5       	ldi	r24, 0x58	; 88
 65c:	90 e0       	ldi	r25, 0x00	; 0
 65e:	02 c0       	rjmp	.+4      	; 0x664 <__stack+0x165>
 660:	88 e7       	ldi	r24, 0x78	; 120
 662:	90 e0       	ldi	r25, 0x00	; 0
 664:	b7 01       	movw	r22, r14
 666:	0c c0       	rjmp	.+24     	; 0x680 <__stack+0x181>
 668:	82 2f       	mov	r24, r18
 66a:	86 78       	andi	r24, 0x86	; 134
 66c:	59 f0       	breq	.+22     	; 0x684 <__stack+0x185>
 66e:	21 fd       	sbrc	r18, 1
 670:	02 c0       	rjmp	.+4      	; 0x676 <__stack+0x177>
 672:	80 e2       	ldi	r24, 0x20	; 32
 674:	01 c0       	rjmp	.+2      	; 0x678 <__stack+0x179>
 676:	8b e2       	ldi	r24, 0x2B	; 43
 678:	27 fd       	sbrc	r18, 7
 67a:	8d e2       	ldi	r24, 0x2D	; 45
 67c:	b7 01       	movw	r22, r14
 67e:	90 e0       	ldi	r25, 0x00	; 0
 680:	0e 94 80 03 	call	0x700	; 0x700 <fputc>
 684:	a5 14       	cp	r10, r5
 686:	38 f4       	brcc	.+14     	; 0x696 <__stack+0x197>
 688:	b7 01       	movw	r22, r14
 68a:	80 e3       	ldi	r24, 0x30	; 48
 68c:	90 e0       	ldi	r25, 0x00	; 0
 68e:	0e 94 80 03 	call	0x700	; 0x700 <fputc>
 692:	5a 94       	dec	r5
 694:	f7 cf       	rjmp	.-18     	; 0x684 <__stack+0x185>
 696:	aa 94       	dec	r10
 698:	f4 01       	movw	r30, r8
 69a:	ea 0d       	add	r30, r10
 69c:	f1 1d       	adc	r31, r1
 69e:	80 81       	ld	r24, Z
 6a0:	b7 01       	movw	r22, r14
 6a2:	90 e0       	ldi	r25, 0x00	; 0
 6a4:	0e 94 80 03 	call	0x700	; 0x700 <fputc>
 6a8:	a1 10       	cpse	r10, r1
 6aa:	f5 cf       	rjmp	.-22     	; 0x696 <__stack+0x197>
 6ac:	33 20       	and	r3, r3
 6ae:	09 f4       	brne	.+2      	; 0x6b2 <__stack+0x1b3>
 6b0:	51 ce       	rjmp	.-862    	; 0x354 <vfprintf+0x24>
 6b2:	b7 01       	movw	r22, r14
 6b4:	80 e2       	ldi	r24, 0x20	; 32
 6b6:	90 e0       	ldi	r25, 0x00	; 0
 6b8:	0e 94 80 03 	call	0x700	; 0x700 <fputc>
 6bc:	3a 94       	dec	r3
 6be:	f6 cf       	rjmp	.-20     	; 0x6ac <__stack+0x1ad>
 6c0:	f7 01       	movw	r30, r14
 6c2:	86 81       	ldd	r24, Z+6	; 0x06
 6c4:	97 81       	ldd	r25, Z+7	; 0x07
 6c6:	02 c0       	rjmp	.+4      	; 0x6cc <__stack+0x1cd>
 6c8:	8f ef       	ldi	r24, 0xFF	; 255
 6ca:	9f ef       	ldi	r25, 0xFF	; 255
 6cc:	2c 96       	adiw	r28, 0x0c	; 12
 6ce:	e2 e1       	ldi	r30, 0x12	; 18
 6d0:	0c 94 2c 04 	jmp	0x858	; 0x858 <__epilogue_restores__>

000006d4 <strnlen_P>:
 6d4:	fc 01       	movw	r30, r24
 6d6:	05 90       	lpm	r0, Z+
 6d8:	61 50       	subi	r22, 0x01	; 1
 6da:	70 40       	sbci	r23, 0x00	; 0
 6dc:	01 10       	cpse	r0, r1
 6de:	d8 f7       	brcc	.-10     	; 0x6d6 <strnlen_P+0x2>
 6e0:	80 95       	com	r24
 6e2:	90 95       	com	r25
 6e4:	8e 0f       	add	r24, r30
 6e6:	9f 1f       	adc	r25, r31
 6e8:	08 95       	ret

000006ea <strnlen>:
 6ea:	fc 01       	movw	r30, r24
 6ec:	61 50       	subi	r22, 0x01	; 1
 6ee:	70 40       	sbci	r23, 0x00	; 0
 6f0:	01 90       	ld	r0, Z+
 6f2:	01 10       	cpse	r0, r1
 6f4:	d8 f7       	brcc	.-10     	; 0x6ec <strnlen+0x2>
 6f6:	80 95       	com	r24
 6f8:	90 95       	com	r25
 6fa:	8e 0f       	add	r24, r30
 6fc:	9f 1f       	adc	r25, r31
 6fe:	08 95       	ret

00000700 <fputc>:
 700:	0f 93       	push	r16
 702:	1f 93       	push	r17
 704:	cf 93       	push	r28
 706:	df 93       	push	r29
 708:	18 2f       	mov	r17, r24
 70a:	09 2f       	mov	r16, r25
 70c:	eb 01       	movw	r28, r22
 70e:	8b 81       	ldd	r24, Y+3	; 0x03
 710:	81 fd       	sbrc	r24, 1
 712:	03 c0       	rjmp	.+6      	; 0x71a <fputc+0x1a>
 714:	8f ef       	ldi	r24, 0xFF	; 255
 716:	9f ef       	ldi	r25, 0xFF	; 255
 718:	20 c0       	rjmp	.+64     	; 0x75a <fputc+0x5a>
 71a:	82 ff       	sbrs	r24, 2
 71c:	10 c0       	rjmp	.+32     	; 0x73e <fputc+0x3e>
 71e:	4e 81       	ldd	r20, Y+6	; 0x06
 720:	5f 81       	ldd	r21, Y+7	; 0x07
 722:	2c 81       	ldd	r18, Y+4	; 0x04
 724:	3d 81       	ldd	r19, Y+5	; 0x05
 726:	42 17       	cp	r20, r18
 728:	53 07       	cpc	r21, r19
 72a:	7c f4       	brge	.+30     	; 0x74a <fputc+0x4a>
 72c:	e8 81       	ld	r30, Y
 72e:	f9 81       	ldd	r31, Y+1	; 0x01
 730:	9f 01       	movw	r18, r30
 732:	2f 5f       	subi	r18, 0xFF	; 255
 734:	3f 4f       	sbci	r19, 0xFF	; 255
 736:	39 83       	std	Y+1, r19	; 0x01
 738:	28 83       	st	Y, r18
 73a:	10 83       	st	Z, r17
 73c:	06 c0       	rjmp	.+12     	; 0x74a <fputc+0x4a>
 73e:	e8 85       	ldd	r30, Y+8	; 0x08
 740:	f9 85       	ldd	r31, Y+9	; 0x09
 742:	81 2f       	mov	r24, r17
 744:	09 95       	icall
 746:	89 2b       	or	r24, r25
 748:	29 f7       	brne	.-54     	; 0x714 <fputc+0x14>
 74a:	2e 81       	ldd	r18, Y+6	; 0x06
 74c:	3f 81       	ldd	r19, Y+7	; 0x07
 74e:	2f 5f       	subi	r18, 0xFF	; 255
 750:	3f 4f       	sbci	r19, 0xFF	; 255
 752:	3f 83       	std	Y+7, r19	; 0x07
 754:	2e 83       	std	Y+6, r18	; 0x06
 756:	81 2f       	mov	r24, r17
 758:	90 2f       	mov	r25, r16
 75a:	df 91       	pop	r29
 75c:	cf 91       	pop	r28
 75e:	1f 91       	pop	r17
 760:	0f 91       	pop	r16
 762:	08 95       	ret

00000764 <__ultoa_invert>:
 764:	fa 01       	movw	r30, r20
 766:	aa 27       	eor	r26, r26
 768:	28 30       	cpi	r18, 0x08	; 8
 76a:	51 f1       	breq	.+84     	; 0x7c0 <__ultoa_invert+0x5c>
 76c:	20 31       	cpi	r18, 0x10	; 16
 76e:	81 f1       	breq	.+96     	; 0x7d0 <__ultoa_invert+0x6c>
 770:	e8 94       	clt
 772:	6f 93       	push	r22
 774:	6e 7f       	andi	r22, 0xFE	; 254
 776:	6e 5f       	subi	r22, 0xFE	; 254
 778:	7f 4f       	sbci	r23, 0xFF	; 255
 77a:	8f 4f       	sbci	r24, 0xFF	; 255
 77c:	9f 4f       	sbci	r25, 0xFF	; 255
 77e:	af 4f       	sbci	r26, 0xFF	; 255
 780:	b1 e0       	ldi	r27, 0x01	; 1
 782:	3e d0       	rcall	.+124    	; 0x800 <__ultoa_invert+0x9c>
 784:	b4 e0       	ldi	r27, 0x04	; 4
 786:	3c d0       	rcall	.+120    	; 0x800 <__ultoa_invert+0x9c>
 788:	67 0f       	add	r22, r23
 78a:	78 1f       	adc	r23, r24
 78c:	89 1f       	adc	r24, r25
 78e:	9a 1f       	adc	r25, r26
 790:	a1 1d       	adc	r26, r1
 792:	68 0f       	add	r22, r24
 794:	79 1f       	adc	r23, r25
 796:	8a 1f       	adc	r24, r26
 798:	91 1d       	adc	r25, r1
 79a:	a1 1d       	adc	r26, r1
 79c:	6a 0f       	add	r22, r26
 79e:	71 1d       	adc	r23, r1
 7a0:	81 1d       	adc	r24, r1
 7a2:	91 1d       	adc	r25, r1
 7a4:	a1 1d       	adc	r26, r1
 7a6:	20 d0       	rcall	.+64     	; 0x7e8 <__ultoa_invert+0x84>
 7a8:	09 f4       	brne	.+2      	; 0x7ac <__ultoa_invert+0x48>
 7aa:	68 94       	set
 7ac:	3f 91       	pop	r19
 7ae:	2a e0       	ldi	r18, 0x0A	; 10
 7b0:	26 9f       	mul	r18, r22
 7b2:	11 24       	eor	r1, r1
 7b4:	30 19       	sub	r19, r0
 7b6:	30 5d       	subi	r19, 0xD0	; 208
 7b8:	31 93       	st	Z+, r19
 7ba:	de f6       	brtc	.-74     	; 0x772 <__ultoa_invert+0xe>
 7bc:	cf 01       	movw	r24, r30
 7be:	08 95       	ret
 7c0:	46 2f       	mov	r20, r22
 7c2:	47 70       	andi	r20, 0x07	; 7
 7c4:	40 5d       	subi	r20, 0xD0	; 208
 7c6:	41 93       	st	Z+, r20
 7c8:	b3 e0       	ldi	r27, 0x03	; 3
 7ca:	0f d0       	rcall	.+30     	; 0x7ea <__ultoa_invert+0x86>
 7cc:	c9 f7       	brne	.-14     	; 0x7c0 <__ultoa_invert+0x5c>
 7ce:	f6 cf       	rjmp	.-20     	; 0x7bc <__ultoa_invert+0x58>
 7d0:	46 2f       	mov	r20, r22
 7d2:	4f 70       	andi	r20, 0x0F	; 15
 7d4:	40 5d       	subi	r20, 0xD0	; 208
 7d6:	4a 33       	cpi	r20, 0x3A	; 58
 7d8:	18 f0       	brcs	.+6      	; 0x7e0 <__ultoa_invert+0x7c>
 7da:	49 5d       	subi	r20, 0xD9	; 217
 7dc:	31 fd       	sbrc	r19, 1
 7de:	40 52       	subi	r20, 0x20	; 32
 7e0:	41 93       	st	Z+, r20
 7e2:	02 d0       	rcall	.+4      	; 0x7e8 <__ultoa_invert+0x84>
 7e4:	a9 f7       	brne	.-22     	; 0x7d0 <__ultoa_invert+0x6c>
 7e6:	ea cf       	rjmp	.-44     	; 0x7bc <__ultoa_invert+0x58>
 7e8:	b4 e0       	ldi	r27, 0x04	; 4
 7ea:	a6 95       	lsr	r26
 7ec:	97 95       	ror	r25
 7ee:	87 95       	ror	r24
 7f0:	77 95       	ror	r23
 7f2:	67 95       	ror	r22
 7f4:	ba 95       	dec	r27
 7f6:	c9 f7       	brne	.-14     	; 0x7ea <__ultoa_invert+0x86>
 7f8:	00 97       	sbiw	r24, 0x00	; 0
 7fa:	61 05       	cpc	r22, r1
 7fc:	71 05       	cpc	r23, r1
 7fe:	08 95       	ret
 800:	9b 01       	movw	r18, r22
 802:	ac 01       	movw	r20, r24
 804:	0a 2e       	mov	r0, r26
 806:	06 94       	lsr	r0
 808:	57 95       	ror	r21
 80a:	47 95       	ror	r20
 80c:	37 95       	ror	r19
 80e:	27 95       	ror	r18
 810:	ba 95       	dec	r27
 812:	c9 f7       	brne	.-14     	; 0x806 <__ultoa_invert+0xa2>
 814:	62 0f       	add	r22, r18
 816:	73 1f       	adc	r23, r19
 818:	84 1f       	adc	r24, r20
 81a:	95 1f       	adc	r25, r21
 81c:	a0 1d       	adc	r26, r0
 81e:	08 95       	ret

00000820 <__prologue_saves__>:
 820:	2f 92       	push	r2
 822:	3f 92       	push	r3
 824:	4f 92       	push	r4
 826:	5f 92       	push	r5
 828:	6f 92       	push	r6
 82a:	7f 92       	push	r7
 82c:	8f 92       	push	r8
 82e:	9f 92       	push	r9
 830:	af 92       	push	r10
 832:	bf 92       	push	r11
 834:	cf 92       	push	r12
 836:	df 92       	push	r13
 838:	ef 92       	push	r14
 83a:	ff 92       	push	r15
 83c:	0f 93       	push	r16
 83e:	1f 93       	push	r17
 840:	cf 93       	push	r28
 842:	df 93       	push	r29
 844:	cd b7       	in	r28, 0x3d	; 61
 846:	de b7       	in	r29, 0x3e	; 62
 848:	ca 1b       	sub	r28, r26
 84a:	db 0b       	sbc	r29, r27
 84c:	0f b6       	in	r0, 0x3f	; 63
 84e:	f8 94       	cli
 850:	de bf       	out	0x3e, r29	; 62
 852:	0f be       	out	0x3f, r0	; 63
 854:	cd bf       	out	0x3d, r28	; 61
 856:	09 94       	ijmp

00000858 <__epilogue_restores__>:
 858:	2a 88       	ldd	r2, Y+18	; 0x12
 85a:	39 88       	ldd	r3, Y+17	; 0x11
 85c:	48 88       	ldd	r4, Y+16	; 0x10
 85e:	5f 84       	ldd	r5, Y+15	; 0x0f
 860:	6e 84       	ldd	r6, Y+14	; 0x0e
 862:	7d 84       	ldd	r7, Y+13	; 0x0d
 864:	8c 84       	ldd	r8, Y+12	; 0x0c
 866:	9b 84       	ldd	r9, Y+11	; 0x0b
 868:	aa 84       	ldd	r10, Y+10	; 0x0a
 86a:	b9 84       	ldd	r11, Y+9	; 0x09
 86c:	c8 84       	ldd	r12, Y+8	; 0x08
 86e:	df 80       	ldd	r13, Y+7	; 0x07
 870:	ee 80       	ldd	r14, Y+6	; 0x06
 872:	fd 80       	ldd	r15, Y+5	; 0x05
 874:	0c 81       	ldd	r16, Y+4	; 0x04
 876:	1b 81       	ldd	r17, Y+3	; 0x03
 878:	aa 81       	ldd	r26, Y+2	; 0x02
 87a:	b9 81       	ldd	r27, Y+1	; 0x01
 87c:	ce 0f       	add	r28, r30
 87e:	d1 1d       	adc	r29, r1
 880:	0f b6       	in	r0, 0x3f	; 63
 882:	f8 94       	cli
 884:	de bf       	out	0x3e, r29	; 62
 886:	0f be       	out	0x3f, r0	; 63
 888:	cd bf       	out	0x3d, r28	; 61
 88a:	ed 01       	movw	r28, r26
 88c:	08 95       	ret

0000088e <_exit>:
 88e:	f8 94       	cli

00000890 <__stop_program>:
 890:	ff cf       	rjmp	.-2      	; 0x890 <__stop_program>
